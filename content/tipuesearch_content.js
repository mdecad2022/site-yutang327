var tipuesearch = {"pages": [{'title': 'About', 'text': '四設計二甲 41023153 張昱棠 \n 倉儲 : https://github.com/mdecad2022/site-yutang327 \n 網頁 : https://mdecad2022.github.io/site-yutang327/content/index.html \n cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n', 'tags': '', 'url': 'About.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'w6', 'text': '\n 零件一 \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n 零件二 \n /downloads/Nx1.7z \n \n \n 零件三 \n /downloads/nx2.7z \n \n \n 零件四 \n /downloads/table_support.7z \n \n \n 零件五 \n \n \n 零件一與二組合 \n \n \n /downloads/Nx1.7z \n \n \n \n \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w8', 'text': '\n', 'tags': '', 'url': 'w8.html'}, {'title': 'w10', 'text': '上課內容: \n 已知  block.prt  中 p8=59, p9=44, 請利用網際表單, 將 p8, p9 都改為 50 之後, 在瀏覽中提供新的 block_new.prt 檔案下載, 並直接在網頁上展示該零件的 STL 格式檔案. \n 範例檔案:  w10_cad2022_solvespace_ex.7z \n \n \n block_new.prt 檔案下載: /downloads/block_new.stl \n \n \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w14', 'text': '', 'tags': '', 'url': 'w14.html'}, {'title': 'Solvespace', 'text': 'solve space:零件檔案: /downloads/base(solve).7z ， /downloads/shaft.7z ， /downloads/untitled.7z \n 結合: /downloads/assembly.7z \n \n \n \n \n \n', 'tags': '', 'url': 'Solvespace.html'}, {'title': 'NX', 'text': '零件檔案: /downloads/shaft(nx.7z \n /downloads/base(nx).7z \n /downloads/unititled.7z \n 組合: /downloads/assembly(NX).7z \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'NX.html'}, {'title': 'Onshape', 'text': 'Base_URL: https://cad.onshape.com/documents/7a19c2e4d3c7468a084fa8d3/w/5597d20fd2dcd8b6b216407a/e/60b1e7c99d942441045e0049?renderMode=0&uiState=63958eed5b16787ea6368d2c \n Shaft_URL: https://cad.onshape.com/documents/2eb6064e0f2af2dba09aa83f/w/3779bc3efa8a90f152f769a5/e/6fec15eef1454068980ff9d9?renderMode=0&uiState=63958f135b16787ea6368d3d \n Untitled_URL: https://cad.onshape.com/documents/4a3a1dcb9b0c45ea710e4c48/w/a2d0a47132cbbaa12b1ae59c/e/3eb0eb7a040a692d158a2977?renderMode=0&uiState=63958f4e1828750a98ec7e39 \n base-shaft-untitled_URL: https://cad.onshape.com/documents/f31c8caf3652ff871cd70b23/w/a3fc3657dd3d6893cc57e3b1/e/e67f4ccb1206d31b942663b4?renderMode=0&uiState=63958f801828750a98ec7e80 \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Onshape.html'}, {'title': 'w15', 'text': '/downloads/41023153link1216.simscene.xml.zip ， /downloads/two link.zip \n \n \n \n   \n \n', 'tags': '', 'url': 'w15.html'}, {'title': 'CoppeliaSim', 'text': '\n \n \n', 'tags': '', 'url': 'CoppeliaSim.html'}, {'title': 'w16', 'text': '\n \n', 'tags': '', 'url': 'w16.html'}, {'title': 'Schedule', 'text': '', 'tags': '', 'url': 'Schedule.html'}, {'title': 'W1', 'text': '中秋節放假 \n', 'tags': '', 'url': 'W1.html'}, {'title': 'W2', 'text': '上課內容: \n 1.建立41023153@nfu.edu.tw的Microsoft帳號 \n 2.建立Replit的個人帳號 \n 3.建立one shape的個人帳號 \n ____________________________________________________________________________________ \n 心得:當初在建立one drive的帳號時不小心將mail設成41023153@gm.nfu.edu.tw導致無法加入課程，幸好在與老師確認mail是沒有gm之後，重新建立帳號，就成功加入課程了 \n', 'tags': '', 'url': 'W2.html'}, {'title': 'W3', 'text': '\n 透過\xa0\xa0 mdecad2022\xa0\xa0 的 organization 建立個人可以管理的倉儲 (site-Github_帳號) \xa0 \n 利用\xa0\xa0 replit 帳號所啟動的動態網站進行內容管理 \xa0 \n 動態轉為靜態網站內容之後,\xa0\xa0 要設法與 Github 倉儲同步. \xa0 \n \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W4', 'text': '上課內容: \n 在 Replit 執行動態網站: \xa0 \n 必須進入 Shell, 在倉儲根目錄執行下列兩則指令 (取下子模組內容, 並安裝執行所需模組). \xa0 \n git submodule update --init --recursive \xa0 \n pip install\xa0\xa0 flask flask_cors bs4 lxml pelican markdown gevent \xa0 \n \xa0連線至  考試主機 :\u202f\xa0 https://exam.cycu.org \u202f 並且辦理帳號及密碼\xa0   \n \xa0 \n 近端工具: 下載\xa0\xa0 \xa0 portable_python_3.10.6.7z \xa0 \n \xa0\xa0\xa0 Portablegit \xa0 \n 雲端工具: Replit \xa0 \n Web 分散式版次管理:\xa0 \xa0 https://github.com \xa0 \xa0 \n \xa0 \n 電腦輔助繪圖工具:\xa0 \xa0 \n \xa0\xa0\xa0 近端 NX2027 與 Solvespace \xa0 \n \xa0\xa0\xa0 雲端: \xa0 https://onshape.com \xa0 \xa0 \n \xa0 ____________________________________________________________________________________ \n 心得:在下載完NX2027後發現內部的部分資料可能被電腦的防火牆給阻擋掉，導致無法成功開啟，好家在問了老師過後，發現重新再下載後就可以成功開啟。 \n', 'tags': '', 'url': 'W4.html'}, {'title': 'W5', 'text': 'Replit 雖然好用, 但畢竟是採用免費帳號, 許多資源的取用受到限制,  https://wcms.repl.co  並不是全時都開機, 當使用者連線時, 雲端虛擬主機才會開機, 且當免費帳號的資源用盡時, 服務連線將會受到限制. 因此, 在工作站室中的一台 Ubuntu 伺服器建立一個 Windows 10 虛擬主機, 從 github.com/mdecycu/wcms 取下倉儲內容, 配置與  https://wcms.repl.co  相同的服務內容:  https://wcms.cycu.org:5443 , 之所以使用 port 5443 是因為同台主機上的 443 已經為  https://nfu.cycu.org  所用, 專門從學校教務主機取出各班選課名單, 以 cad2022 為例:  2a 學員名單 ,  2b 學員名單 , 就是利用 nfu.cycu.org 取得. \n 上課內容及筆記: \n \n \n Login to\xa0 https://mail.nfu.edu.tw \xa0 -\xa0 查看登入 stud.cycu.org 伺服器的帳號密碼, 帳號為 cad+學號, 密碼為四個字元, 包括數字與小寫英文字母 \xa0 \n 請到 excel 檔案\xa0 查詢 \xa0stud.cycu.org 中與帳號對應的近端 (給 127.0.0.1 使用, 9 開頭的 port) 與遠端 (給 stud.cycu.org, 8 開頭的 port) 埠號 \xa0 \n 修改可攜 Python 3.10.6 start.bat, 蓋掉第三行後重新啟動, 目的希望將操作系統的命令搜尋路徑放在可攜目錄搜尋路徑之後. \xa0 \n 重新啟動可攜程式環境, 在其中一個命令列, ssh\xa0\xa0 cad+學號@stud.cycu.org , 表示要使用 secure shell 遠端登入到 stud.cycu.org, 這是一台 Linux 主機, 安裝 Ubuntu 22.04 Server.(若使用的網路連線協定並無 IPv6,\xa0 可將系統的 proxy 設為 140.130.17.4:3128 kmolab/kmolab) \xa0 \n 在 ssh 登入畫面, 以 ssh-keygen 建立 key pairs, .ssh/id_rsa 為 private key, id_rsa.pub 為 public key \xa0 \n 設法利用 Filezilla, 以 sftp 安全的(Secure)檔案(File)傳輸(Transmission)協定(Protocol), 與 stud.cycu.org 伺服器連結. \xa0 \n 利用\xa0 Filezilla sftp 取下 id_rsa.pub, 登錄至 Github 帳號下的 Setting - >\xa0 SSH and GPG keys. \xa0 \n 對\xa0 server sftp 也可以利用\xa0\xa0 Filezilla portable , 以圖形介面完成. 而 ssh 也可以透過\xa0 putty.exe 執行遠端登入. \xa0 \n 接下來要下載\xa0\xa0 config \xa0設定檔案,\xa0 以 sftp 放入 stud.cycu.org 主機的 .ssh 目錄中. \xa0 \n 接下來要在\xa0 Ubuntu (也就是 stud.cycu.org 這台主機所安裝的操作系統) 中, 設定 .gitconfig, 總共包含三項設定: git config --global user.name "scrum-1", git config --global user.email\xa0 "scrum1@mde.tw"\xa0\xa0 以及 git config --global http.proxy http://p42.cycu.org:3128, 這三個設定必須在 ssh 登入畫面中執行, 設定完成檔案會存入帳號根目錄中的 .gitconfig \xa0 \n 利用\xa0 git clone --recurse-submodules\xa0\xa0 git@demo:mdecad2022/site-scrum-1.git \xa0 demo \xa0 \n 接著下載\xa0 server.py , 在 Windows 編輯\xa0 server.py , 將個人分配到的 9xxxx 埠號填入後存檔, 以 sftp 放入上列取下的倉儲根目錄. \xa0 \n 登入\xa0 Ubuntu 後, 會使用的指令: pwd 代表 print working directory, clear -\xa0 清除螢幕, cd - 更換目錄, ls -l 列出目錄詳細內容, chmod u+x\xa0 acp \xa0表示讓 user 可以 execute acp script (能夠讓使用者以 source acp 加上提交字串進行 git add, git commit, git push, 如何在 Windows 執行 acp.bat 加上提交字串.   \n \n _______________________________________________________________________________________________ \n \n \n \xa0心得:在上課時聽不太懂該如何操作，所以決定下課後留在教室與同學一起問老師該如何操作，雖然過程十分坎坷，不過最後終於在老師不厭其煩的教導及帶領，還有跟我一起犧牲晚餐時間的同學們的努力下成功完成動態網頁的設立。 \n \n \n \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W6', 'text': '在 stud.cycu.org 執行動態網站 \xa0 \n git config --global http.proxy\xa0 http://p42.cycu.org:3128 \xa0 \n \xa0 \xa0 \n git config --global user.name "name" \xa0 \n \xa0 \xa0 \n git config --global user.email "email" \xa0 \n \xa0 \xa0 \n git clone --recurse-submodules git@demo:mdecad2022/site-github_帳號.git s \xa0 \n \xa0 \xa0 \n git submodule update --init --recursive \xa0 \n \xa0 \xa0 \n python3 server.py \xa0 \n \xa0 \xa0 \n https://stud.cycu.org:8xxx \xa0 \n \xa0 \xa0 \n acp 放入倉儲後 \xa0 \n \xa0 \xa0 \n chmod u+x acp\xa0 \xa0 \n \xa0 \xa0 \n source acp "提交說明字串" \xa0 \n \xa0 \xa0 \n python3 server.py & \xa0 \n \xa0 \xa0 \n ps aux | grep "server.py" \xa0 \n \xa0 \xa0 \n kill -9 111919 \xa0 \n \xa0 \xa0 \n cd s, cd cmsimde, git pull origin master \xa0 \n \xa0 \xa0 \n cd .., python3 server.py \xa0 \n \xa0 \xa0 \n exit 推出 login \xa0 \n \xa0 \n To fix the cmsimde bug on edit during https mode: \xa0 \n Need to cd cmsimde and do "git pull origin master" to update the cmsimde submodule files. \xa0 \n \xa0 \n After that, go back to the repository root directory to execute python3 server.py & to start the dynamic site. \xa0 \n \xa0 \xa0 \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W7', 'text': '下載繪圖程式並且練習繪圖 \n', 'tags': '', 'url': 'W7.html'}, {'title': 'W8', 'text': 'W8 零件繪圖練習 \xa0 \n \n 請分別利用 Solvespace、Onshape 與 NX2027 繪製\xa0\xa0 Base_Clamp 零件. \xa0 \xa0 \n 完成後請將零件繪圖過程與畫面送至個人 H1 標題 cad2022 下的 H2 Solvespace、Onshape、NX2027 頁面中, 並將工程圖與零件檔案放入頁面連結. \xa0 \n \n', 'tags': '', 'url': 'W8.html'}, {'title': 'W9', 'text': '\n \n w9 期中考試時段 \n \n \n \n \n \n \n 電腦輔助設計與實習 2a w9 考試時間, 從 2022.11.04 13:40-14:20,  https://exam.cycu.org/ , 校外網段必須設定 140.130.17.4:3128 kmolab/kmolab 才能進入考試. \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W9.html'}, {'title': 'W10', 'text': '上課內容: \n \n \n w10 HW2 web based NX \n \n \n \n \n \n \n 已知  block.prt  中 p8=59, p9=44, 請利用網際表單, 將 p8, p9 都改為 50 之後, 在瀏覽中提供新的 block_new.prt 檔案下載, 並直接在網頁上展示該零件的 STL 格式檔案. \n 範例程式: \n \n from flask import Flask, request \n \n \n # for NX2027 import NXOpen import NXOpen.UF import NXOpen.Gateway \n \n \n app = Flask(__name__) \n \n \n @app.route(\'/\') def index(): \xa0 \xa0 return \'\'\' \xa0 \xa0 <form action="/action" method="post"> \xa0 \xa0 a: <input type="text" name="a" size="10"><br /> \xa0 \xa0 b: <input type="text" name="b" size="10"><br /> \xa0 \xa0 <input type="submit" value="send"> \xa0 \xa0 </form> \xa0 \xa0 \'\'\' \n \n \n @app.route(\'/action\', methods=[\'POST\']) def action(): \xa0 \xa0 a = request.form[\'a\'] \xa0 \xa0 b = request.form[\'b\'] \xa0 \xa0 return "a: " + a +", " + "b: " + b \n \n \n @app.route(\'/nxopen\') def nxopen(): \xa0 \xa0 # 取得目前開啟的工作階段 \xa0 \xa0 theSession = NXOpen.Session.GetSession() \xa0 \xa0 theUfSession = NXOpen.UF.UFSession.GetUFSession() \xa0 \xa0 \xa0\xa0 \xa0 \xa0 # 建立 ListingWindow \xa0 \xa0 listWin= theSession.ListingWindow \xa0 \xa0 # 開啟零件檔案 \xa0 \xa0 basePart1 = theSession.Parts.OpenBaseDisplay("block.prt") \xa0 \xa0 workPart = theSession.Parts.Work \xa0 \xa0 unit1 = workPart.UnitCollection.FindObject("MilliMeter") \xa0 \xa0 # height \xa0 \xa0 p7 = workPart.Expressions.FindObject("p7") \xa0 \xa0 # width \xa0 \xa0 p8 = workPart.Expressions.FindObject("p8") \xa0 \xa0 # length \xa0 \xa0 p9 = workPart.Expressions.FindObject("p9") \xa0 \xa0 workPart.Expressions.EditWithUnits(p7, unit1, "30") \xa0 \xa0 workPart.Expressions.EditWithUnits(p8, unit1, "60") \xa0 \xa0 workPart.Expressions.EditWithUnits(p9, unit1, "90") \xa0 \xa0 theSession.UpdateManager.DoUpdate(0) \xa0 \xa0 try: \xa0 \xa0 \xa0 \xa0 saveStatus1 = workPart.SaveAs("block_new.prt") \xa0 \xa0 \xa0 \xa0 saveStatus1.Dispose() \xa0 \xa0 except: \xa0 \xa0 \xa0 \xa0 pass \xa0 \xa0 # initialize list to hold bodies \xa0 \xa0 theBodyTags = [] \xa0 \xa0 \xa0 \xa0 for x in workPart.Bodies: \xa0 \xa0 \xa0 \xa0 if x.IsSolidBody: \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 theBodyTags.append(x.Tag) \xa0 \xa0 \xa0\xa0 \xa0 \xa0 # 準備輸出 ASCII 格式 STL 零件檔案 \xa0 \xa0 sTLCreator1 = theSession.DexManager.CreateStlCreator() \xa0 \xa0 sTLCreator1.AutoNormalGen = True \xa0 \xa0 sTLCreator1.ChordalTol = 0.08 \xa0 \xa0 sTLCreator1.AdjacencyTol = 0.08 \xa0 \xa0 sTLCreator1.OutputFile = "block_ascii.stl" \xa0 \xa0 # Binary STL: NXOpen.STLCreatorOutputTypeEnum.Binary \xa0 \xa0 sTLCreator1.OutputType = NXOpen.STLCreatorOutputTypeEnum.Text \xa0 \xa0 # 已知 body1 命名 \xa0 \xa0 body1 = workPart.Bodies.FindObject("EXTRUDE(2)") \xa0 \xa0 added1 = sTLCreator1.ExportSelectionBlock.Add(body1) \xa0 \xa0 nXObject1 = sTLCreator1.Commit() \xa0 \xa0 sTLCreator1.Destroy() \xa0\xa0 \xa0 \xa0 # 開啟所建立的 ListingWindow \xa0 \xa0 listWin.Open() \xa0 \xa0 listWin.WriteLine("number of solid bodies: " + str(len(theBodyTags))) \xa0 \xa0 \xa0 \xa0 (massProps, Stats) = theUfSession.Modeling.AskMassProps3d(theBodyTags, len(theBodyTags), 1, 4, .03, 1, [0.99,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]) \xa0 \xa0 listWin.WriteLine("units: kg, mm") \xa0 \xa0 listWin.WriteLine("surface area: " + str(massProps[0])) \xa0 \xa0 listWin.WriteLine("volume: " + str(massProps[1]*1E9)) \xa0 \xa0 # 在 ListingWindow 中寫入字串 \xa0 \xa0 listWin.WriteLine("Hello, NXOpen") \xa0 \xa0 listWin.Close() \xa0 \xa0\xa0 \xa0 \xa0 return "mass: " + str(massProps[0]) \n \n \n # app.run(host=ip, port=port, debug=True, ssl_context="adhoc") app.run(port=8123) \xa0 \n 範例檔案:  w10_cad2022_solvespace_ex.7z \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W10.html'}, {'title': 'W11', 'text': '\n \n 建立 TCExam 題庫 \n \n \n \n \n \n \n 各分組如何建立 TCExam 線上考試系統的題庫? \n \n 啟動可攜 Python 程式系統後, 在命令列中輸入 leo, 開啟 Leo Editor. \n 下載  tcexam_network_setting_cadlab.leo , 以 Leo Editor 開啟. \n 了解如何使用 Leo Editor. \n 各組組員根據下列規劃出題: \n \n 題庫建立時間 - header 標註: \n \n \n \n \n XML \n \n \n <?xml version="1.0" encoding="UTF-8" ?>\n <tcexamquestions version="14.8.5\n ">\n <header lang="en" date="2022-11-10 14:02:11"></header>\n @others\n </tcexamquestions>\n @language xml\n @tabwidth -4 \n \n \n \n \n \n 根據命題時間, 修改上列 header 內容. \n 接下來修改題庫模組名稱 - module -name: \n \n \n \n \n XML \n \n \n <module>\n     <name>network_setting</name>\n     <enabled>true</enabled>\n     @others\n </module> \n \n \n \n \n \n module 內的 name 請改為 cp2022_ag1_w12, 表示該題目模組名稱為 cp2022 課程 a 班第一組在 w12 週所建立的題庫. \n 接下來, 修改有關題庫主題 - subject - name: \n \n \n \n \n XML \n \n \n <subject>\n <name>cadlab</name>\n <description>有關電腦輔助設計室網路相關設定</description>\n <enabled>true</enabled>\n @others\n </subject> \n \n \n \n \n \n subject 標註下的 name 表示該題庫的主題, 請將 subject 下的 name 標註內容改為 w12. 並在其下的 description 標註說明此題庫的相關測驗內容. \n 接下來則開始建立試題: \n \n \n \n \n XML \n \n \n <question>\n <enabled>true</enabled>\n <type>multiple</type>\n <difficulty>1</difficulty>\n <position></position>\n <timer>0</timer>\n <fullscreen>false</fullscreen>\n <inline_answers>false</inline_answers>\n <auto_next>false</auto_next>\n <description>請根據機械設計工程系綜一館八樓的電腦輔助設計室電腦與網路相關設定, 選出下列正確的敘述.</description>\n <explanation>在電腦輔助設計室上課時, 將網路線直接連接到系主幹, 在正常情況下, 可以得到最大的連外頻寬.</explanation>\n @others\n </question> \n \n \n \n \n \n question 標註中, 出題者僅需要將複選題的說明文字放入 description 標註中. \n 最後, 出題者需要提供 8-12 個選項, 其中必須 true 與 false 選項各半. \n 題目選項 - answer - isright - description: \n \n \n \n \n XML \n \n \n <answer>\n     <enabled>true</enabled>\n     <isright>true</isright>\n     <position></position>\n     <keyboard_key></keyboard_key>\n     <description>上課時段之所以只選用 IPv6 網路協定, 是為了取得對外網路連線最大頻寬.</description>\n     <explanation></explanation>\n </answer> \n \n \n \n 若 isright 標註中為 true 表示該 description 選項敘述正確, 若 isright 標註中為 false, 則表示該 description 選項敘述錯誤. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12', 'text': '', 'tags': '', 'url': 'W12.html'}, {'title': 'W13', 'text': '', 'tags': '', 'url': 'W13.html'}, {'title': 'W14', 'text': '', 'tags': '', 'url': 'W14.html'}, {'title': 'W15', 'text': '', 'tags': '', 'url': 'W15.html'}]};